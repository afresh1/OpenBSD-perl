diff -x CVS -Nru ../perl-5.12.2/cpan/Test-Simple/t/is_deeply_fail.t ./cpan/Test-Simple/t/is_deeply_fail.t
--- ../perl-5.12.2/cpan/Test-Simple/t/is_deeply_fail.t	Mon Sep  6 16:30:32 2010
+++ ./cpan/Test-Simple/t/is_deeply_fail.t	Fri Jan  7 05:19:31 2011
@@ -25,7 +25,7 @@
 
 
 my $TB = Test::Builder->create;
-$TB->plan(tests => 73);
+$TB->plan(tests => 100);
 
 # Utility testing functions.
 sub ok ($;$) {
@@ -368,4 +368,51 @@
 #     \\\$expected = GLOB\\(0x[0-9a-f]+\\)
 ERR
 
+}
+
+
+# rt.cpan.org 53469
+{
+#line 377
+    ok !is_deeply( qr/a/, qr/b/, "different regexes" );
+    is( $out, "not ok 29 - different regexes\n" );
+    is( $err, <<ERR,          '  right diagnostic' );
+#   Failed test 'different regexes'
+#   at $0 line 377.
+#     Structures begin differing at:
+#          \$got = (?-xism:a)
+#     \$expected = (?-xism:b)
+ERR
+}
+
+
+# false values that should not compare equal
+{
+    ok !is_deeply( 0, '', "0 != ''" );
+    is( $out, "not ok 30 - 0 != ''\n" );
+    ok !is_deeply( 0, undef, "0 != undef" );
+    is( $out,    "not ok 31 - 0 != undef\n" );
+    ok !is_deeply( '', undef, "'' != undef" );
+    is( $out,     "not ok 32 - '' != undef\n" );
+
+    ok !is_deeply( [0], [''], "[0] != ['']" );
+    is( $out,     "not ok 33 - [0] != ['']\n" );
+    ok !is_deeply( [0], [undef], "[0] != [undef]" );
+    is( $out,        "not ok 34 - [0] != [undef]\n" );
+    ok !is_deeply( [''], [undef], "[''] != [undef]" );
+    is( $out,         "not ok 35 - [''] != [undef]\n" );
+
+    ok !is_deeply( [0], [], "[0] != []" );
+    is( $out,   "not ok 36 - [0] != []\n" );
+    ok !is_deeply( [undef], [], "[undef] != []" );
+    is( $out,       "not ok 37 - [undef] != []\n" );
+    ok !is_deeply( [''], [], "[''] != []" );
+    is( $out,    "not ok 38 - [''] != []\n" );
+
+    ok !is_deeply( {x => 0}, {x => ''}, "{x => 0} != {x => ''}" );
+    is( $out,               "not ok 39 - {x => 0} != {x => ''}\n" );
+    ok !is_deeply( {x => 0}, {x => undef}, "{x => 0} != {x => undef}" );
+    is( $out,                  "not ok 40 - {x => 0} != {x => undef}\n" );
+    ok !is_deeply( {x => ''}, {x => undef}, "{x => ''} != {x => undef}" );
+    is( $out,                   "not ok 41 - {x => ''} != {x => undef}\n" );
 }
