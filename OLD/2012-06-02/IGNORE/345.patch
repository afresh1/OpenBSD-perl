---------------------
PatchSet 345 
Date: 2011/11/01 06:52:21
Author: jasper
Branch: HEAD
Tag: (none) 
Log:
Security fix for CVE-2011-2939, Perl decode_xs heap-based buffer overflow.

ok espie@ millert@

Members: 
	patchlevel.h:1.26->1.27 
	cpan/Encode/Unicode/Unicode.xs:1.2->1.3 

Index: src/gnu/usr.bin/perl/patchlevel.h
diff -u src/gnu/usr.bin/perl/patchlevel.h:1.26 src/gnu/usr.bin/perl/patchlevel.h:1.27
--- patchlevel.h:1.26	Tue Oct 11 18:13:35 2011
+++ patchlevel.h	Tue Nov  1 13:52:21 2011
@@ -133,6 +133,7 @@
 	,"Updated List::Util to 1.23"
 	,"CVE-2011-1487"
 	,"Updated Digest to 1.17"
+	,"CVE-2011-2939"
 #ifdef PERL_GIT_UNCOMMITTED_CHANGES
 	,"uncommitted-changes"
 #endif
Index: src/gnu/usr.bin/perl/cpan/Encode/Unicode/Unicode.xs
diff -u src/gnu/usr.bin/perl/cpan/Encode/Unicode/Unicode.xs:1.2 src/gnu/usr.bin/perl/cpan/Encode/Unicode/Unicode.xs:1.3
--- cpan/Encode/Unicode/Unicode.xs:1.2	Fri Sep 24 15:06:47 2010
+++ cpan/Encode/Unicode/Unicode.xs	Tue Nov  1 13:52:21 2011
@@ -246,7 +246,10 @@
 	       This prevents allocating too much in the rogue case of a large
 	       input consisting initially of long sequence uft8-byte unicode
 	       chars followed by single utf8-byte chars. */
-	    STRLEN remaining = (e - s)/usize;
+	    /* +1 
+               fixes  Unicode.xs!decode_xs n-byte heap-overflow
+              */
+	    STRLEN remaining = (e - s)/usize + 1; /* +1 to avoid the leak */
 	    STRLEN max_alloc = remaining + (8*1024*1024);
 	    STRLEN est_alloc = remaining * UTF8_MAXLEN;
 	    STRLEN newlen = SvLEN(result) + /* min(max_alloc, est_alloc) */
