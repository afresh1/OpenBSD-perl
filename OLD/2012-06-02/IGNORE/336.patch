---------------------
PatchSet 336 
Date: 2011/04/18 01:27:57
Author: jasper
Branch: HEAD
Tag: (none) 
Log:
- update List::Util to 1.23, as needed by newer p5-POE

tested in bulk build.
ok millert@

Members: 
	patchlevel.h:1.22->1.23 
	cpan/List-Util/Changes:1.1->1.2 
	cpan/List-Util/ListUtil.xs:1.1->1.2 
	cpan/List-Util/lib/List/Util.pm:1.1->1.2 
	cpan/List-Util/lib/List/Util/PP.pm:1.1->1.2 
	cpan/List-Util/lib/List/Util/XS.pm:1.1->1.2 
	cpan/List-Util/lib/Scalar/Util.pm:1.1->1.2 
	cpan/List-Util/lib/Scalar/Util/PP.pm:1.1->1.2 
	cpan/List-Util/t/max.t:1.1->1.2 
	cpan/List-Util/t/min.t:1.1->1.2 

Index: src/gnu/usr.bin/perl/patchlevel.h
diff -u src/gnu/usr.bin/perl/patchlevel.h:1.22 src/gnu/usr.bin/perl/patchlevel.h:1.23
--- patchlevel.h:1.22	Fri Jan  7 12:19:31 2011
+++ patchlevel.h	Mon Apr 18 08:27:57 2011
@@ -130,6 +130,7 @@
 	,"CVE-2010-0405"
 	,"Updated CGI to 3.51"
 	,"Updated Test::Simple to 0.96"
+	,"Updated List::Util to 1.23"
 #ifdef PERL_GIT_UNCOMMITTED_CHANGES
 	,"uncommitted-changes"
 #endif
Index: src/gnu/usr.bin/perl/cpan/List-Util/Changes
diff -u src/gnu/usr.bin/perl/cpan/List-Util/Changes:1.1 src/gnu/usr.bin/perl/cpan/List-Util/Changes:1.2
--- cpan/List-Util/Changes:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/Changes	Mon Apr 18 08:27:57 2011
@@ -1,3 +1,13 @@
+1.23 -- Wed Mar 10 20:50:00 CST 2010
+
+  * Add a test file to ensure 'GETMAGIC' called once [gfx]
+  * "GETMAGIC" should be called only once [gfx]
+  * Use PERL_NO_GET_CONTEXT for efficiency (see perlguts) [gfx]
+  * Don't care about dVAR. ExtUtils::ParseXS deals with it. [gfx]
+  * t/p_max.t, t/p_min.t fail on perl5.8.1.  [tokuhirom]
+  * avoid non-portable warnings
+  * Fix PP::reftype in edge cases [gfx]
+
 1.22 -- Sat Nov 14 09:26:15 CST 2009
 
   * silence a compiler warning about an unreferenced local variable [Steve Hay]
Index: src/gnu/usr.bin/perl/cpan/List-Util/ListUtil.xs
diff -u src/gnu/usr.bin/perl/cpan/List-Util/ListUtil.xs:1.1 src/gnu/usr.bin/perl/cpan/List-Util/ListUtil.xs:1.2
--- cpan/List-Util/ListUtil.xs:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/ListUtil.xs	Mon Apr 18 08:27:57 2011
@@ -2,7 +2,7 @@
  * This program is free software; you can redistribute it and/or
  * modify it under the same terms as Perl itself.
  */
-
+#define PERL_NO_GET_CONTEXT /* we want efficiency */
 #include <EXTERN.h>
 #include <perl.h>
 #include <XSUB.h>
@@ -66,7 +66,7 @@
 #  ifndef SvTAINTED
 
 static bool
-sv_tainted(SV *sv)
+sv_tainted(pTHX_ SV *sv)
 {
     if (SvTYPE(sv) >= SVt_PVMG && SvMAGIC(sv)) {
 	MAGIC *mg = mg_find(sv, 't');
@@ -77,7 +77,7 @@
 }
 
 #    define SvTAINTED_on(sv) sv_magic((sv), Nullsv, 't', Nullch, 0)
-#    define SvTAINTED(sv) (SvMAGICAL(sv) && sv_tainted(sv))
+#    define SvTAINTED(sv) (SvMAGICAL(sv) && sv_tainted(aTHX_ sv))
 #  endif
 #  define PL_defgv defgv
 #  define PL_op op
@@ -126,10 +126,6 @@
 #define dNOOP extern int Perl___notused PERL_UNUSED_DECL
 #endif
 
-#ifndef dVAR
-#define dVAR dNOOP
-#endif
-
 #ifndef GvSVn
 #  define GvSVn GvSV
 #endif
@@ -282,7 +278,7 @@
 PROTOTYPE: &@
 CODE:
 {
-    dVAR; dMULTICALL;
+    dMULTICALL;
     SV *ret = sv_newmortal();
     int index;
     GV *agv,*bgv,*gv;
@@ -321,7 +317,7 @@
 PROTOTYPE: &@
 CODE:
 {
-    dVAR; dMULTICALL;
+    dMULTICALL;
     int index;
     GV *gv;
     HV *stash;
@@ -359,7 +355,6 @@
 PROTOTYPE: @
 CODE:
 {
-    dVAR;
     int index;
 #if (PERL_VERSION < 9)
     struct op dmy_op;
@@ -438,7 +433,7 @@
 {
     if (SvMAGICAL(sv))
 	mg_get(sv);
-    if(!sv_isobject(sv)) {
+    if(!(SvROK(sv) && SvOBJECT(SvRV(sv)))) {
 	XSRETURN_UNDEF;
     }
     RETVAL = (char*)sv_reftype(SvRV(sv),TRUE);
Index: src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util.pm
diff -u src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util.pm:1.1 src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util.pm:1.2
--- cpan/List-Util/lib/List/Util.pm:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/lib/List/Util.pm	Mon Apr 18 08:27:57 2011
@@ -14,7 +14,7 @@
 
 @ISA        = qw(Exporter);
 @EXPORT_OK  = qw(first min max minstr maxstr reduce sum shuffle);
-$VERSION    = "1.22";
+$VERSION    = "1.23";
 $XS_VERSION = $VERSION;
 $VERSION    = eval $VERSION;
 
Index: src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/PP.pm
diff -u src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/PP.pm:1.1 src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/PP.pm:1.2
--- cpan/List-Util/lib/List/Util/PP.pm:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/lib/List/Util/PP.pm	Mon Apr 18 08:27:57 2011
@@ -13,7 +13,7 @@
 
 @ISA     = qw(Exporter);
 @EXPORT  = qw(first min max minstr maxstr reduce sum shuffle);
-$VERSION = "1.22";
+$VERSION = "1.23";
 $VERSION = eval $VERSION;
 
 sub reduce (&@) {
Index: src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/XS.pm
diff -u src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/XS.pm:1.1 src/gnu/usr.bin/perl/cpan/List-Util/lib/List/Util/XS.pm:1.2
--- cpan/List-Util/lib/List/Util/XS.pm:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/lib/List/Util/XS.pm	Mon Apr 18 08:27:57 2011
@@ -3,7 +3,7 @@
 use vars qw($VERSION);
 use List::Util;
 
-$VERSION = "1.22";           # FIXUP
+$VERSION = "1.23";           # FIXUP
 $VERSION = eval $VERSION;    # FIXUP
 
 sub _VERSION { # FIXUP
Index: src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util.pm
diff -u src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util.pm:1.1 src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util.pm:1.2
--- cpan/List-Util/lib/Scalar/Util.pm:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/lib/Scalar/Util.pm	Mon Apr 18 08:27:57 2011
@@ -13,7 +13,7 @@
 
 @ISA       = qw(Exporter);
 @EXPORT_OK = qw(blessed dualvar reftype weaken isweak tainted readonly openhandle refaddr isvstring looks_like_number set_prototype);
-$VERSION    = "1.22";
+$VERSION    = "1.23";
 $VERSION   = eval $VERSION;
 
 unless (defined &dualvar) {
Index: src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util/PP.pm
diff -u src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util/PP.pm:1.1 src/gnu/usr.bin/perl/cpan/List-Util/lib/Scalar/Util/PP.pm:1.2
--- cpan/List-Util/lib/Scalar/Util/PP.pm:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/lib/Scalar/Util/PP.pm	Mon Apr 18 08:27:57 2011
@@ -16,7 +16,7 @@
 
 @ISA     = qw(Exporter);
 @EXPORT  = qw(blessed reftype tainted readonly refaddr looks_like_number);
-$VERSION = "1.22";
+$VERSION = "1.23";
 $VERSION = eval $VERSION;
 
 sub blessed ($) {
@@ -41,20 +41,19 @@
 
   $addr =~ /0x(\w+)/;
   local $^W;
+  no warnings 'portable';
   hex($1);
 }
 
 {
   my %tmap = qw(
-    B::HV HASH
-    B::AV ARRAY
-    B::CV CODE
-    B::IO IO
-    B::NULL SCALAR
-    B::NV SCALAR
-    B::PV SCALAR
-    B::GV GLOB
-    B::RV REF
+    B::NULL   SCALAR
+
+    B::HV     HASH
+    B::AV     ARRAY
+    B::CV     CODE
+    B::IO     IO
+    B::GV     GLOB
     B::REGEXP REGEXP
   );
 
Index: src/gnu/usr.bin/perl/cpan/List-Util/t/max.t
diff -u src/gnu/usr.bin/perl/cpan/List-Util/t/max.t:1.1 src/gnu/usr.bin/perl/cpan/List-Util/t/max.t:1.2
--- cpan/List-Util/t/max.t:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/t/max.t	Mon Apr 18 08:27:57 2011
@@ -50,6 +50,7 @@
 use overload
   '""' => sub { ${$_[0]} },
   '+0' => sub { ${$_[0]} },
+  '>'  => sub { ${$_[0]} > ${$_[1]} },
   fallback => 1;
   sub new {
     my $class = shift;
Index: src/gnu/usr.bin/perl/cpan/List-Util/t/min.t
diff -u src/gnu/usr.bin/perl/cpan/List-Util/t/min.t:1.1 src/gnu/usr.bin/perl/cpan/List-Util/t/min.t:1.2
--- cpan/List-Util/t/min.t:1.1	Fri Sep 24 14:49:03 2010
+++ cpan/List-Util/t/min.t	Mon Apr 18 08:27:57 2011
@@ -50,6 +50,7 @@
 use overload
   '""' => sub { ${$_[0]} },
   '+0' => sub { ${$_[0]} },
+  '<'  => sub { ${$_[0]} < ${$_[1]} },
   fallback => 1;
   sub new {
     my $class = shift;
