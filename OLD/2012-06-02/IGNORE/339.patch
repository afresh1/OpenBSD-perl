---------------------
PatchSet 339 
Date: 2011/04/20 06:53:38
Author: bluhm
Branch: OPENBSD_4_9
Tag: (none) 
Log:
Perl security fix for CVE-2011-1487.
ok sthen@ jasper@

Members: 
	patchlevel.h:1.22->1.22.2.1 
	pp.c:1.14->1.14.2.1 
	t/op/taint.t:1.13->1.13.2.1 

Index: src/gnu/usr.bin/perl/patchlevel.h
diff -u src/gnu/usr.bin/perl/patchlevel.h:1.22 src/gnu/usr.bin/perl/patchlevel.h:1.22.2.1
--- patchlevel.h:1.22	Fri Jan  7 12:19:31 2011
+++ patchlevel.h	Wed Apr 20 13:53:38 2011
@@ -130,6 +130,7 @@
 	,"CVE-2010-0405"
 	,"Updated CGI to 3.51"
 	,"Updated Test::Simple to 0.96"
+	,"CVE-2011-1487"
 #ifdef PERL_GIT_UNCOMMITTED_CHANGES
 	,"uncommitted-changes"
 #endif
Index: src/gnu/usr.bin/perl/pp.c
diff -u src/gnu/usr.bin/perl/pp.c:1.14 src/gnu/usr.bin/perl/pp.c:1.14.2.1
--- pp.c:1.14	Fri Sep 24 15:06:41 2010
+++ pp.c	Wed Apr 20 13:53:38 2011
@@ -3949,6 +3949,8 @@
 	    SvCUR_set(dest, need - 1);
 	}
     }
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
@@ -4222,6 +4224,8 @@
 	    SvCUR_set(dest, d - (U8*)SvPVX_const(dest));
 	}
     } /* End of isn't utf8 */
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
@@ -4433,6 +4437,8 @@
 	    SvCUR_set(dest, d - (U8*)SvPVX_const(dest));
 	}
     }
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
Index: src/gnu/usr.bin/perl/t/op/taint.t
diff -u src/gnu/usr.bin/perl/t/op/taint.t:1.13 src/gnu/usr.bin/perl/t/op/taint.t:1.13.2.1
--- t/op/taint.t:1.13	Fri Sep 24 15:07:09 2010
+++ t/op/taint.t	Wed Apr 20 13:53:38 2011
@@ -17,7 +17,7 @@
 use File::Spec::Functions;
 
 BEGIN { require './test.pl'; }
-plan tests => 302;
+plan tests => 306;
 
 $| = 1;
 
@@ -1318,6 +1318,18 @@
     unlike($err, qr/^\d+$/, 'tainted $!');
 }
 
+{
+    # [perl #87336] lc/uc(first) failing to taint the returned string
+    my $source = "foo$TAINT";
+    my $dest = lc $source;
+    ok(tainted($dest), "lc(tainted) taints its return value");
+    $dest = lcfirst $source;
+    ok(tainted($dest), "lcfirst(tainted) taints its return value");
+    $dest = uc $source;
+    ok(tainted($dest), "uc(tainted) taints its return value");
+    $dest = ucfirst $source;
+    ok(tainted($dest), "ucfirst(tainted) taints its return value");
+}
 
 # This may bomb out with the alarm signal so keep it last
 SKIP: {
