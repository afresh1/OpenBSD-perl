---------------------
PatchSet 338 
Date: 2011/04/18 14:29:51
Author: bluhm
Branch: HEAD
Tag: (none) 
Log:
Perl security fix for CVE-2011-1487:
ucfirst(), uc() and lc() forget to set the tainted flag if input
was marked as tainted.

http://rt.perl.org/rt3/Public/Bug/Display.html?id=87336
http://perl5.git.perl.org/perl.git/commitdiff/539689e74a3bcb04d29e4cd9396de91a81045b99

ok millert@

Members: 
	patchlevel.h:1.24->1.25 
	pp.c:1.14->1.15 
	t/op/taint.t:1.13->1.14 

Index: src/gnu/usr.bin/perl/patchlevel.h
diff -u src/gnu/usr.bin/perl/patchlevel.h:1.24 src/gnu/usr.bin/perl/patchlevel.h:1.25
--- patchlevel.h:1.24	Mon Apr 18 17:48:24 2011
+++ patchlevel.h	Mon Apr 18 21:29:51 2011
@@ -131,6 +131,7 @@
 	,"Updated CGI to 3.51"
 	,"Updated Test::Simple to 0.98"
 	,"Updated List::Util to 1.23"
+	,"CVE-2011-1487"
 #ifdef PERL_GIT_UNCOMMITTED_CHANGES
 	,"uncommitted-changes"
 #endif
Index: src/gnu/usr.bin/perl/pp.c
diff -u src/gnu/usr.bin/perl/pp.c:1.14 src/gnu/usr.bin/perl/pp.c:1.15
--- pp.c:1.14	Fri Sep 24 15:06:41 2010
+++ pp.c	Mon Apr 18 21:29:51 2011
@@ -3949,6 +3949,8 @@
 	    SvCUR_set(dest, need - 1);
 	}
     }
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
@@ -4222,6 +4224,8 @@
 	    SvCUR_set(dest, d - (U8*)SvPVX_const(dest));
 	}
     } /* End of isn't utf8 */
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
@@ -4433,6 +4437,8 @@
 	    SvCUR_set(dest, d - (U8*)SvPVX_const(dest));
 	}
     }
+    if (dest != source && SvTAINTED(source))
+	SvTAINT(dest);
     SvSETMAGIC(dest);
     RETURN;
 }
Index: src/gnu/usr.bin/perl/t/op/taint.t
diff -u src/gnu/usr.bin/perl/t/op/taint.t:1.13 src/gnu/usr.bin/perl/t/op/taint.t:1.14
--- t/op/taint.t:1.13	Fri Sep 24 15:07:09 2010
+++ t/op/taint.t	Mon Apr 18 21:29:51 2011
@@ -17,7 +17,7 @@
 use File::Spec::Functions;
 
 BEGIN { require './test.pl'; }
-plan tests => 302;
+plan tests => 306;
 
 $| = 1;
 
@@ -1318,6 +1318,18 @@
     unlike($err, qr/^\d+$/, 'tainted $!');
 }
 
+{
+    # [perl #87336] lc/uc(first) failing to taint the returned string
+    my $source = "foo$TAINT";
+    my $dest = lc $source;
+    ok(tainted($dest), "lc(tainted) taints its return value");
+    $dest = lcfirst $source;
+    ok(tainted($dest), "lcfirst(tainted) taints its return value");
+    $dest = uc $source;
+    ok(tainted($dest), "uc(tainted) taints its return value");
+    $dest = ucfirst $source;
+    ok(tainted($dest), "ucfirst(tainted) taints its return value");
+}
 
 # This may bomb out with the alarm signal so keep it last
 SKIP: {
