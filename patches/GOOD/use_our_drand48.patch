--- ./Configure.orig	Mon Jan  1 20:36:12 2024
+++ ./Configure	Mon Jan  1 20:36:25 2024
@@ -21122,9 +21122,9 @@ case "$ccflags" in
 	;;
 esac
 
-randfunc=Perl_drand48
-drand01="Perl_drand48()"
-seedfunc="Perl_drand48_init"
+randfunc=drand48
+drand01="drand48()"
+seedfunc="srand48"
 randbits=48
 randseedtype=U32
 
--- ./pp.c.orig	Tue Nov 28 03:57:28 2023
+++ ./pp.c	Mon Jan  1 20:36:25 2024
@@ -2952,12 +2952,13 @@ PP(pp_rand)
             /* env var PERL_RAND_SEED has been set so the user wants
              * consistent srand() initialization. */
             PERL_SRAND_OVERRIDE_GET(s);
+            (void)srand48_deterministic((Rand_seed_t)s);
         } else {
             /* Pseudo random initialization from context state and possible
              * random devices */
             s= (Rand_seed_t)seed();
+            (void)seedDrand01(s);
         }
-        (void)seedDrand01(s);
         PL_srand_called = TRUE;
     }
     {
@@ -3014,18 +3015,20 @@ PP(pp_srand)
                              "Integer overflow in srand");
             anum = UV_MAX;
         }
+        (void)srand48_deterministic((Rand_seed_t)anum);
     }
     else {
         if (PL_srand_override) {
             /* env var PERL_RAND_SEED has been set so the user wants
              * consistent srand() initialization. */
             PERL_SRAND_OVERRIDE_GET(anum);
+            (void)srand48_deterministic((Rand_seed_t)anum);
         } else {
             anum = seed();
+            (void)seedDrand01((Rand_seed_t)anum);
         }
     }
 
-    (void)seedDrand01((Rand_seed_t)anum);
     PL_srand_called = TRUE;
     if (anum)
         XPUSHu(anum);
