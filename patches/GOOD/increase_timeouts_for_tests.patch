--- ./dist/threads-shared/t/stress.t.orig	Tue Mar 20 13:06:36 2018
+++ ./dist/threads-shared/t/stress.t	Mon Nov 26 18:48:34 2018
@@ -83,7 +83,7 @@ use threads::shared;
         print "# Looping for $busycount iterations should take about 0.025s\n";
     }
 
-    my $TIMEOUT = 60;
+    my $TIMEOUT = 600;
 
     my $mutex = 1;
     share($mutex);
--- ./t/op/getppid.t.orig	Mon May 21 05:29:23 2018
+++ ./t/op/getppid.t	Mon Nov 26 18:48:34 2018
@@ -100,7 +100,7 @@ sub fork_and_retrieve {
 		}
 	    } else {
 		# Fudge it by waiting a bit more:
-		sleep 2;
+		sleep 3;
 	    }
 	    my $ppid2 = getppid();
 	    print $w "$how,$ppid1,$ppid2\n";
--- ./t/re/speed.t.orig	Mon May 21 05:29:23 2018
+++ ./t/re/speed.t	Mon Nov 26 18:48:34 2018
@@ -42,7 +42,7 @@ run_tests() unless caller;
 sub run_tests {
 
 
-    watchdog(($::running_as_thread && $::running_as_thread) ? 150 : 225);
+    watchdog(($::running_as_thread && $::running_as_thread) ? 150 : 540);
 
     {
         # [perl #120446]
@@ -153,7 +153,7 @@ PROG
         my $substr= substr( $str, 1 );
         1 while $substr=~m/0/g;
         $elapsed += time;
-        ok( $elapsed <= 1, "should not COW on long string with substr and m//g");
+        ok( $elapsed <= 2, "should not COW on long string with substr and m//g");
     }
 
     # [perl #133185] Infinite loop
