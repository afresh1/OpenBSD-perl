--- ./lib/Config.t.orig	Tue Apr 30 19:52:55 2013
+++ ./lib/Config.t	Sun Sep 29 18:10:27 2013
@@ -271,8 +271,8 @@
     }
     # So we expect to find it in @INC
 
-    ok (exists $orig_inc{$dir}, "Expect $lib '$dir' to be in \@INC")
-      or $failed++;
+    ok (exists $orig_inc{$_}, "Expect $lib '$_' to be in \@INC")
+      or $failed++ for split ':', $dir;
   }
 }
 _diag ('@INC is:', @orig_inc) if $failed;
--- ./configpm.orig	Sun Aug 11 19:44:47 2013
+++ ./configpm	Sun Sep 29 18:10:27 2013
@@ -91,6 +91,11 @@
 		   (.{1,64})\  # Split at the last convenient space
 		  /$1\n              /gx;
 
+# libpaths that should be truncated after the first path element
+my %Libpathtrunc = map {($_,$_)}
+                   qw(archlib archlibexp privlib privlibexp sitearch sitearchexp
+                      sitelib sitelibexp);
+
 # allowed opts as well as specifies default and initial values
 my %Allowed_Opts = (
     'cross'    => '', # --cross=PLATFORM - crosscompiling for PLATFORM
@@ -336,6 +341,9 @@
     }
     $in_v = $val !~ /$quote\n/;
     next if $in_v;
+
+    # XXX - should use PERLLIB_SEP, not hard-code ':'
+    $val =~ s/^([^:]+).*${quote}\w*$/$1${quote}/ if $Libpathtrunc{$name};
 
     s,/,::,g if $Extensions{$name};
 
