From eaad0944d74148bfd4e31b61f7d6f4a9d0f42500 Mon Sep 17 00:00:00 2001
From: Andrew Hewus Fresh <andrew@afresh1.com>
Date: Sat, 6 Jul 2019 12:35:13 -0700
Subject: [PATCH] Guess man section from man*dirs

---
 lib/ExtUtils/MM_Any.pm  |   6 +--
 lib/ExtUtils/MM_Unix.pm |  19 ++++++++
 t/build_man.t           | 105 +++++++++++++++++++++++++++++++++++++++-
 3 files changed, 126 insertions(+), 4 deletions(-)

diff --git a/lib/ExtUtils/MM_Any.pm b/lib/ExtUtils/MM_Any.pm
index 3157df76..2df3d69a 100644
--- cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm.orig
+++ cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Any.pm
@@ -1088,9 +1088,9 @@ manifypods : pure_all config $dependencies
 END
 
     my @man_cmds;
-    foreach my $section (qw(1 3)) {
-        my $pods = $self->{"MAN${section}PODS"};
-        my $p2m = sprintf <<'CMD', $section, $] > 5.008 ? " -u" : "";
+    foreach my $num (qw(1 3)) {
+        my $pods = $self->{"MAN${num}PODS"};
+        my $p2m = sprintf <<'CMD', "\$(MAN${num}SECTION)", "$]" > 5.008 ? " -u" : "";
 	$(NOECHO) $(POD2MAN) --section=%s --perm_rw=$(PERM_RW)%s
 CMD
         push @man_cmds, $self->split_command($p2m, map {($_,$pods->{$_})} sort keys %$pods);
diff --git a/lib/ExtUtils/MM_Unix.pm b/lib/ExtUtils/MM_Unix.pm
index 5748122e..a5235976 100644
--- cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm.orig
+++ cpan/ExtUtils-MakeMaker/lib/ExtUtils/MM_Unix.pm
@@ -419,6 +419,7 @@ sub constants {
               INST_ARCHLIB INST_SCRIPT INST_BIN INST_LIB
               INST_MAN1DIR INST_MAN3DIR
               MAN1EXT      MAN3EXT
+              MAN1SECTION  MAN3SECTION
               INSTALLDIRS INSTALL_BASE DESTDIR PREFIX
               PERLPREFIX      SITEPREFIX      VENDORPREFIX
                    ),
@@ -1500,6 +1501,24 @@ sub init_MANPODS {
             $self->$init_method();
         }
     }
+
+    # logic similar to picking man${num}ext in perl's Configure script
+    foreach my $num (1,3) {
+        my $installdirs = uc $self->{INSTALLDIRS};
+        $installdirs = '' if $installdirs eq 'PERL';
+        my $mandir = $self->_expand_macros(
+            $self->{ "INSTALL${installdirs}MAN${num}DIR" } );
+        my $section = $num;
+
+        foreach ($num, "${num}p", "${num}pm", qw< l n o C L >, "L$num") {
+            if ( $mandir =~ /\b(?:man|cat)$_$/ ) {
+                $section = $_;
+                last;
+            }
+        }
+
+        $self->{"MAN${num}SECTION"} = $section;
+    }
 }
 
 
diff --git a/t/build_man.t b/t/build_man.t
index a88ccd23..b35c4c16 100644
--- cpan/ExtUtils-MakeMaker/t/build_man.t.orig
+++ cpan/ExtUtils-MakeMaker/t/build_man.t
@@ -7,7 +7,7 @@ BEGIN {
 }
 
 use strict;
-use Test::More tests => 10;
+use Test::More tests => 46;
 
 use File::Spec;
 use File::Temp qw[tempdir];
@@ -81,3 +81,106 @@ ok((my $stdout = tie *STDOUT, 'TieOut'), 'tie stdout');
     );
     is_deeply $mm->{MAN3PODS}, { "Foo.pm" => "Foo.1" }, 'override man3pod';
 }
+
+unlink $README;
+
+# Check that we find the manage section from the directory
+{
+    local $Config{installman1dir}       = '';
+    local $Config{installman3dir}       = '';
+    local $Config{installsiteman1dir}   = '';
+    local $Config{installsiteman3dir}   = '';
+    local $Config{installvendorman1dir} = '';
+    local $Config{installvendorman3dir} = '';
+    local $Config{usevendorprefix}      = '';
+    local $Config{vendorprefixexp}      = '';
+
+    my $INSTALLDIRS = 'site';
+
+    my $sections_ok = sub {
+        my ( $man1section, $man3section, $m ) = @_;
+        local $Test::Builder::Level = $Test::Builder::Level + 1;
+
+        my $stdout = tie *STDOUT, 'TieOut' or die;
+        my $mm     = WriteMakefile(
+            NAME         => 'Big::Dummy',
+            VERSION_FROM => 'lib/Big/Dummy.pm',
+            INSTALLDIRS  => $INSTALLDIRS,
+        );
+
+        is( $mm->{MAN1SECTION}, $man1section,
+            "$m man1section is $man1section" );
+        is( $mm->{MAN3SECTION}, $man3section,
+            "$m man3section is $man3section" );
+    };
+
+    # Correctly detect known man sections
+    foreach my $s ( '{num}', '{num}p', '{num}pm', qw< l n o C L >, "L{num}", )
+    {
+        ( my $man1section = $s ) =~ s/\{num\}/1/;
+        ( my $man3section = $s ) =~ s/\{num\}/3/;
+
+        $Config{installman1dir}
+            = File::Spec->catdir( 'foo', "man$man1section" );
+        $Config{installman3dir}
+            = File::Spec->catdir( 'foo', "man$man3section" );
+
+        $sections_ok->( $man1section, $man3section, "From main [$s]" );
+    }
+
+    # Ignore unknown man sections
+    foreach my $s ( '', qw< 2 2p 33 >, "C{num}" ) {
+        ( my $man1section = $s ) =~ s/\{num\}/1/;
+        ( my $man3section = $s ) =~ s/\{num\}/3/;
+
+        $Config{installman1dir}
+            = File::Spec->catdir( 'foo', "man$man1section" );
+        $Config{installman3dir}
+            = File::Spec->catdir( 'foo', "man$man3section" );
+
+        $sections_ok->( 1, 3, "Ignore unrecognized [$s]" );
+    }
+
+    # Look in the right installman?dir based on INSTALLDIRS
+    {
+        $Config{installman1dir}     = File::Spec->catdir( 'foo', 'cat1p' );
+        $Config{installman3dir}     = File::Spec->catdir( 'foo', 'cat3p' );
+        $Config{installsiteman1dir} = File::Spec->catdir( 'foo', 'catL' );
+        $Config{installsiteman3dir} = File::Spec->catdir( 'foo', 'catL3' );
+
+        $sections_ok->( 'L', 'L3', "From site" );
+
+        my $installwas = $INSTALLDIRS;
+        $INSTALLDIRS = 'perl';
+        $sections_ok->( '1p', '3p', "From main" );
+        $INSTALLDIRS = $installwas;
+
+    }
+
+    # Set MAN?SECTION in Makefile
+    {
+        $Config{installman1dir} = File::Spec->catdir( 'foo', 'man1pm' );
+        $Config{installman3dir} = File::Spec->catdir( 'foo', 'man3pm' );
+        $Config{installsiteman1dir} = '';
+        $Config{installsiteman3dir} = '';
+
+        my $stdout = tie *STDOUT, 'TieOut' or die;
+        my $mm     = WriteMakefile(
+            NAME         => 'Big::Dummy',
+            VERSION_FROM => 'lib/Big/Dummy.pm',
+            MAN1PODS     => { foo => 'foo.1' },
+            INSTALLDIRS  => $INSTALLDIRS,
+        );
+
+        my $makefile = slurp('Makefile');
+
+        like $makefile, qr/^\QMAN1SECTION = 1pm\E$/xms, "Set MAN1SECTION";
+        like $makefile, qr/^\QMAN3SECTION = 3pm\E$/xms, "Set MAN3SECTION";
+
+        like $makefile, qr/\Q$(POD2MAN) --section=$(MAN1SECTION) \E/,
+            "Set POD2MAN section to \$(MAN1SECTION)";
+        like $makefile, qr/\Q$(POD2MAN) --section=$(MAN3SECTION) \E/,
+            "Set POD2MAN section to \$(MAN3SECTION)";
+    }
+}
+
-- 
2.22.0

