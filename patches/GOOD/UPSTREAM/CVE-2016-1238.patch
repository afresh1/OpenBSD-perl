From: Sawyer X <xsawyerx@gmail.com>
Date: Wed, 6 Jul 2016 15:30:26 +0200
Message-ID:
<CAMvkq_Qvourq2aO=t6tpKq1VVNWYmZFs2xTay5FRXdjnyzDTBQ@mail.gmail.com>
Subject: Early security issue disclosure
To: undisclosed-recipients:;
Content-Type: multipart/mixed; boundary=001a11408b6caa555d0536f793eb

--001a11408b6caa555d0536f793eb
Content-Type: text/plain; charset=UTF-8

Hi,

I am the current project lead for the Perl 5 project. I hereby provide
an early disclosure of a security-related problem in Perl 5,
identified as CVE-2016-1238.

The problem relates to Perl 5 ("perl") loading modules from the
includes directory array ("@INC") in which the last element is the
current directory (".").
That means that, when "perl" wants to load a
module (during first compilation or during lazy loading of a module in
run-time), perl will look for the module in the current directory at
the end, since '.' is the last include directory in its array of
include directories to seek. The issue is with requiring libraries
that are in "." but are not otherwise installed.

The major problem with this behavior is that it unexpectedly puts a
user at risk whenever they execute any Perl scripts from a directory
that is writable by other accounts on the system. For instance, if a
user is logged in as root and changes directory into /tmp or an
account's home directory, it is possible to now run any shell commands
that are written in C, Python or Ruby without fear.

The same isn't true for any shell commands that are written in Perl,
since a significant proportion of Perl scripts will execute code in
the
current working directory whenever they are run. For example, if a
user on a shared system creates the file /tmp/Pod/Perldoc/Toterm.pm,
and then I log in as root, change directory to /tmp, and run "perldoc
perlrun", it will execute the code they have placed in the file.

The most severe example discovered on Debian is that apt-get will load
and execute the /tmp/Log/Agent.pm file regardless of the directory it
is started from since it automatically changes directory to /tmp.

This is present in perl versions 5.24 and below. We will be making
additional maintenance releases of 5.24, 5.22 (current supported
versions), and (as an exception, probably) 5.20 (which is no longer
officially supported) which will include the fix for it.

The fix, supplied in the attached patches, is to check if the last
entry of @INC is "." and if so, to remove it
as an included path.

This will be disclosed publicly on July 25th.

This problem was first reported by John Lightsey and Todd Rinaldo,
courtesy of the cPanel Security Team at cPanel. The CVE is courtesy of
Debian. The patches were written by Tony Cook, a Perl 5 core
developer.

We are still looking into changes for version 5.20, and if we decide
on it (within the next few days), we will provide a patch for it as
well.

If any patches receive an update (another utility or module updated),
we will pass them on promptly.

Thank you,
Sawyer X.


--
From e7a963db690ace041677c79c610008941bc2817d Mon Sep 17 00:00:00 2001
From: Tony Cook <tony@develop-help.com>
Date: Tue, 21 Jun 2016 10:02:02 +1000
Subject: [PATCH 1/9] (perl #127834) remove . from the end of @INC if complex
 modules are loaded

While currently Encode and Storable are know to attempt to load modules
not included in the core, updates to other modules may lead to those
also attempting to load new modules, so be safe and remove . for those
as well.
---
 cpan/Archive-Tar/bin/ptar                 | 1 +
 cpan/Archive-Tar/bin/ptardiff             | 1 +
 cpan/Archive-Tar/bin/ptargrep             | 1 +
 cpan/CPAN/scripts/cpan                    | 1 +
 cpan/Digest-SHA/shasum                    | 1 +
 cpan/Encode/bin/enc2xs                    | 1 +
 cpan/Encode/bin/piconv                    | 1 +
 cpan/Encode/bin/ucmlint                   | 1 +
 cpan/Encode/bin/unidump                   | 1 +
 cpan/ExtUtils-MakeMaker/bin/instmodsh     | 1 +
 cpan/IO-Compress/bin/zipdetails           | 1 +
 cpan/JSON-PP/bin/json_pp                  | 1 +
 cpan/Test-Harness/bin/prove               | 1 +
 dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp | 1 +
 dist/Module-CoreList/corelist             | 1 +
 ext/Pod-Html/bin/pod2html                 | 1 +
 utils/c2ph.PL                             | 1 +
 utils/h2ph.PL                             | 2 ++
 utils/h2xs.PL                             | 2 ++
 utils/libnetcfg.PL                        | 1 +
 utils/perlbug.PL                          | 1 +
 utils/perldoc.PL                          | 5 ++++-
 utils/perlivp.PL                          | 2 ++
 utils/splain.PL                           | 6 ++++++
 25 files changed, 36 insertions(+), 1 deletion(-)

diff --git cpan/Archive-Tar/bin/ptar b/cpan/Archive-Tar/bin/ptar
index 0eaffa7..9dc6402 100644
--- cpan/Archive-Tar/bin/ptar
+++ cpan/Archive-Tar/bin/ptar
@@ -1,6 +1,7 @@
 #!/usr/bin/perl
 use strict;
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use File::Find;
 use Getopt::Std;
 use Archive::Tar;
diff --git cpan/Archive-Tar/bin/ptardiff b/cpan/Archive-Tar/bin/ptardiff
index 66bd859..4668fa6 100644
--- cpan/Archive-Tar/bin/ptardiff
+++ cpan/Archive-Tar/bin/ptardiff
@@ -1,5 +1,6 @@
 #!/usr/bin/perl
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use Archive::Tar;
 use Getopt::Std;
diff --git cpan/Archive-Tar/bin/ptargrep b/cpan/Archive-Tar/bin/ptargrep
index 1a320f1..8dc6b4f 100644
--- cpan/Archive-Tar/bin/ptargrep
+++ cpan/Archive-Tar/bin/ptargrep
@@ -4,6 +4,7 @@
 # archive.  See 'ptargrep --help' for more documentation.
 #
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use warnings;
 
diff --git cpan/CPAN/scripts/cpan b/cpan/CPAN/scripts/cpan
index 5f4320e..ccba47e 100644
--- cpan/CPAN/scripts/cpan
+++ cpan/CPAN/scripts/cpan
@@ -1,5 +1,6 @@
 #!/usr/local/bin/perl
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use vars qw($VERSION);
 
diff --git cpan/Digest-SHA/shasum b/cpan/Digest-SHA/shasum
index 14ddd60..62a2b0e 100644
--- cpan/Digest-SHA/shasum
+++ cpan/Digest-SHA/shasum
@@ -13,6 +13,7 @@
 	## "-0" option for reading bit strings, and
 	## "-p" option for portable digests (to be deprecated).
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use warnings;
 use Fcntl;
diff --git cpan/Encode/bin/enc2xs b/cpan/Encode/bin/enc2xs
index 19f2b2b..121e0c2 100644
--- cpan/Encode/bin/enc2xs
+++ cpan/Encode/bin/enc2xs
@@ -4,6 +4,7 @@ BEGIN {
     # with $ENV{PERL_CORE} set
     # In case we need it in future...
     require Config; import Config;
+    pop @INC if $INC[-1] eq '.';
 }
 use strict;
 use warnings;
diff --git cpan/Encode/bin/piconv b/cpan/Encode/bin/piconv
index c1dad9e..60b2a59 100644
--- cpan/Encode/bin/piconv
+++ cpan/Encode/bin/piconv
@@ -1,6 +1,7 @@
 #!./perl
 # $Id: piconv,v 2.7 2014/05/31 09:48:48 dankogai Exp $
 #
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use 5.8.0;
 use strict;
 use Encode ;
diff --git cpan/Encode/bin/ucmlint b/cpan/Encode/bin/ucmlint
index 622376d..25e0d67 100644
--- cpan/Encode/bin/ucmlint
+++ cpan/Encode/bin/ucmlint
@@ -3,6 +3,7 @@
 # $Id: ucmlint,v 2.2 2008/03/12 09:51:11 dankogai Exp $
 #
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 our  $VERSION = do { my @r = (q$Revision: 2.2 $ =~ /\d+/g); sprintf "%d."."%02d" x $#r, @r };
 
diff --git cpan/Encode/bin/unidump b/cpan/Encode/bin/unidump
index ae0da30..f190827 100644
--- cpan/Encode/bin/unidump
+++ cpan/Encode/bin/unidump
@@ -1,5 +1,6 @@
 #!./perl
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use Encode;
 use Getopt::Std;
diff --git cpan/ExtUtils-MakeMaker/bin/instmodsh b/cpan/ExtUtils-MakeMaker/bin/instmodsh
index 8b9aa95..ab0f9d1 100644
--- cpan/ExtUtils-MakeMaker/bin/instmodsh
+++ cpan/ExtUtils-MakeMaker/bin/instmodsh
@@ -1,5 +1,6 @@
 #!/usr/bin/perl -w
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use IO::File;
 use ExtUtils::Packlist;
diff --git cpan/IO-Compress/bin/zipdetails b/cpan/IO-Compress/bin/zipdetails
index 0249850..1b9c70a 100644
--- cpan/IO-Compress/bin/zipdetails
+++ cpan/IO-Compress/bin/zipdetails
@@ -5,6 +5,7 @@
 # Display info on the contents of a Zip file
 #
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use warnings ;
 
diff --git cpan/JSON-PP/bin/json_pp b/cpan/JSON-PP/bin/json_pp
index df9d243..896cd2f 100644
--- cpan/JSON-PP/bin/json_pp
+++ cpan/JSON-PP/bin/json_pp
@@ -1,5 +1,6 @@
 #!/usr/bin/perl
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use Getopt::Long;
 
diff --git cpan/Test-Harness/bin/prove b/cpan/Test-Harness/bin/prove
index 6637cc4..d71b238 100644
--- cpan/Test-Harness/bin/prove
+++ cpan/Test-Harness/bin/prove
@@ -1,5 +1,6 @@
 #!/usr/bin/perl -w
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use warnings;
 use App::Prove;
diff --git dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp b/dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp
index e2ac71a..d596cdf 100644
--- dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp
+++ dist/ExtUtils-ParseXS/lib/ExtUtils/xsubpp
@@ -1,5 +1,6 @@
 #!perl
 use 5.006;
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 eval {
   require ExtUtils::ParseXS;
diff --git dist/Module-CoreList/corelist b/dist/Module-CoreList/corelist
index aa4a945..bbe61cc 100644
--- dist/Module-CoreList/corelist
+++ dist/Module-CoreList/corelist
@@ -130,6 +130,7 @@ requested perl versions.
 
 =cut
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use Module::CoreList;
 use Getopt::Long qw(:config no_ignore_case);
 use Pod::Usage;
diff --git ext/Pod-Html/bin/pod2html b/ext/Pod-Html/bin/pod2html
index b022859..7d1d232 100644
--- ext/Pod-Html/bin/pod2html
+++ ext/Pod-Html/bin/pod2html
@@ -216,6 +216,7 @@ This program is distributed under the Artistic License.
 
 =cut
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use Pod::Html;
 
 pod2html @ARGV;
diff --git utils/c2ph.PL b/utils/c2ph.PL
index 13389ec..cef0b5c 100644
--- utils/c2ph.PL
+++ utils/c2ph.PL
@@ -280,6 +280,7 @@ Anyway, here it is.  Should run on perl v4 or greater.  Maybe less.
 
 $RCSID = '$Id: c2ph,v 1.7 95/10/28 10:41:47 tchrist Exp Locker: tchrist $';
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use File::Temp;
 
 ######################################################################
diff --git utils/h2ph.PL b/utils/h2ph.PL
index d082f22..2523c0a 100644
--- utils/h2ph.PL
+++ utils/h2ph.PL
@@ -36,6 +36,8 @@ $Config{startperl}
 
 print OUT <<'!NO!SUBS!';
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
+
 use strict;
 
 use Config;
diff --git utils/h2xs.PL b/utils/h2xs.PL
index 4cb0943..8fda87b 100644
--- utils/h2xs.PL
+++ utils/h2xs.PL
@@ -35,6 +35,8 @@ $Config{startperl}
 
 print OUT <<'!NO!SUBS!';
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
+
 use warnings;
 
 =head1 NAME
diff --git utils/libnetcfg.PL b/utils/libnetcfg.PL
index 59a2de8..26d2f99 100644
--- utils/libnetcfg.PL
+++ utils/libnetcfg.PL
@@ -97,6 +97,7 @@ Jarkko Hietaniemi, conversion into libnetcfg for inclusion into Perl 5.8.
 
 # $Id: Configure,v 1.8 1997/03/04 09:22:32 gbarr Exp $
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use strict;
 use IO::File;
 use Getopt::Std;
diff --git utils/perlbug.PL b/utils/perlbug.PL
index 885785a..ae8c343 100644
--- utils/perlbug.PL
+++ utils/perlbug.PL
@@ -57,6 +57,7 @@ print OUT <<'!NO!SUBS!';
 my @patches = Config::local_patches();
 my $patch_tags = join "", map /(\S+)/ ? "+$1 " : (), @patches;
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
 use warnings;
 use strict;
 use Config;
diff --git utils/perldoc.PL b/utils/perldoc.PL
index e201de9..cd60bd4 100644
--- utils/perldoc.PL
+++ utils/perldoc.PL
@@ -44,7 +44,10 @@ $Config{startperl}
 # This "$file" file was generated by "$0"
 
 require 5;
-BEGIN { \$^W = 1 if \$ENV{'PERLDOCDEBUG'} }
+BEGIN {
+    \$^W = 1 if \$ENV{'PERLDOCDEBUG'};
+    pop \@INC if \$INC[-1] eq '.';
+}
 use Pod::Perldoc;
 exit( Pod::Perldoc->run() );
 
diff --git utils/perlivp.PL b/utils/perlivp.PL
index c2f0a11..e522913 100644
--- utils/perlivp.PL
+++ utils/perlivp.PL
@@ -39,6 +39,8 @@ print OUT "\n# perlivp $^V\n";
 
 print OUT <<'!NO!SUBS!';
 
+BEGIN { pop @INC if $INC[-1] eq '.' }
+
 sub usage {
     warn "@_\n" if @_;
     print << "    EOUSAGE";
diff --git utils/splain.PL b/utils/splain.PL
index 9c70b61..cae84a0 100644
--- utils/splain.PL
+++ utils/splain.PL
@@ -38,6 +38,12 @@ $Config{startperl}
 	if \$running_under_some_shell;
 !GROK!THIS!
 
+print <<'!NO!SUBS!';
+
+BEGIN { pop @INC if $INC[-1] eq '.' }
+
+!NO!SUBS!
+
 while (<IN>) {
     print OUT unless /^package diagnostics/;
 }
-- 
2.1.4

From da0aba1ac1b6ef46212bf847863a14d4171af4ed Mon Sep 17 00:00:00 2001
From: Tony Cook <tony@develop-help.com>
Date: Thu, 23 Jun 2016 10:41:48 +1000
Subject: [PATCH 3/9] perl5db.pl: ensure PadWalker is loaded from standard
 paths

---
 lib/perl5db.pl | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

diff --git lib/perl5db.pl b/lib/perl5db.pl
index 7e7194e..905e4a7 100644
--- lib/perl5db.pl
+++ lib/perl5db.pl
@@ -1938,7 +1938,10 @@ sub _DB__handle_y_command {
         = $obj->cmd_args =~ /\A(?:(\d*)\s*(.*))?\z/) {
 
         # See if we've got the necessary support.
-        if (!eval { require PadWalker; PadWalker->VERSION(0.08) }) {
+        if (!eval {
+            local @INC = @INC;
+            pop @INC if $INC[-1] eq '.';
+            require PadWalker; PadWalker->VERSION(0.08) }) {
             my $Err = $@;
             _db_warn(
                 $Err =~ /locate/
@@ -9420,7 +9423,10 @@ if PadWalker could be loaded.
 
 =cut
 
-        if (not $text =~ /::/ and eval { require PadWalker } ) {
+        if (not $text =~ /::/ and eval {
+            local @INC = @INC;
+            pop @INC if $INC[-1] eq '.';
+            require PadWalker } ) {
             my $level = 1;
             while (1) {
                 my @info = caller($level);
-- 
2.1.4


From 816695b3a1e47afffe67f51d0fd6befa8e02b544 Mon Sep 17 00:00:00 2001
From: Tony Cook <tony@develop-help.com>
Date: Thu, 23 Jun 2016 14:06:40 +1000
Subject: [PATCH 5/9] dist/: remove . from @INC when loading optional modules

---
 cpan/Test/lib/Test.pm                          | 7 ++++++-
 dist/I18N-LangTags/lib/I18N/LangTags/Detect.pm | 2 ++
 dist/IO/IO.pm                                  | 2 ++
 dist/Locale-Maketext/lib/Locale/Maketext.pm    | 2 ++
 dist/Net-Ping/lib/Net/Ping.pm                  | 6 +++++-
 dist/PathTools/Cwd.pm                          | 5 ++++-
 dist/PathTools/lib/File/Spec/Cygwin.pm         | 6 +++++-
 dist/PathTools/lib/File/Spec/VMS.pm            | 5 ++++-
 dist/PathTools/lib/File/Spec/Win32.pm          | 6 +++++-
 dist/Storable/Storable.pm                      | 8 +++++++-
 dist/base/lib/base.pm                          | 6 +++++-
 11 files changed, 47 insertions(+), 8 deletions(-)

diff --git cpan/Test/lib/Test.pm b/cpan/Test/lib/Test.pm
index 108bc10..7c2c9d3 100644
--- cpan/Test/lib/Test.pm
+++ cpan/Test/lib/Test.pm
@@ -480,7 +480,12 @@ sub _diff_complain {
     my($result, $expected, $detail, $prefix) = @_;
     return _diff_complain_external(@_) if $ENV{PERL_TEST_DIFF};
     return _diff_complain_algdiff(@_)
-     if eval { require Algorithm::Diff; Algorithm::Diff->VERSION(1.15); 1; };
+      if eval {
+          local @INC = @INC;
+          pop @INC if $INC[-1] eq '.';
+          require Algorithm::Diff; Algorithm::Diff->VERSION(1.15);
+          1;
+      };
 
     $told_about_diff++ or print $TESTERR <<"EOT";
 # $prefix   (Install the Algorithm::Diff module to have differences in multiline
diff --git dist/I18N-LangTags/lib/I18N/LangTags/Detect.pm b/dist/I18N-LangTags/lib/I18N/LangTags/Detect.pm
index f13d546..e9c3aaa 100644
--- dist/I18N-LangTags/lib/I18N/LangTags/Detect.pm
+++ dist/I18N-LangTags/lib/I18N/LangTags/Detect.pm
@@ -145,6 +145,8 @@ sub _try_use {   # Basically a wrapper around "require Modulename"
   print " About to use $module ...\n" if DEBUG;
   {
     local $SIG{'__DIE__'};
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     eval "require $module"; # used to be "use $module", but no point in that.
   }
   if($@) {
diff --git dist/IO/IO.pm b/dist/IO/IO.pm
index 2762958..982871d 100644
--- dist/IO/IO.pm
+++ dist/IO/IO.pm
@@ -18,6 +18,8 @@ sub import {
     
     my @l = @_ ? @_ : qw(Handle Seekable File Pipe Socket Dir);
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     eval join("", map { "require IO::" . (/(\w+)/)[0] . ";\n" } @l)
 	or croak $@;
 }
diff --git dist/Locale-Maketext/lib/Locale/Maketext.pm b/dist/Locale-Maketext/lib/Locale/Maketext.pm
index 24c31ea..facc32a 100644
--- dist/Locale-Maketext/lib/Locale/Maketext.pm
+++ dist/Locale-Maketext/lib/Locale/Maketext.pm
@@ -449,6 +449,8 @@ sub _try_use {   # Basically a wrapper around "require Modulename"
 
     local $SIG{'__DIE__'};
     local $@;
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     eval "require $module"; # used to be "use $module", but no point in that.
 
     if($@) {
diff --git dist/Net-Ping/lib/Net/Ping.pm b/dist/Net-Ping/lib/Net/Ping.pm
index 2766c9e..c9cbd27 100644
--- dist/Net-Ping/lib/Net/Ping.pm
+++ dist/Net-Ping/lib/Net/Ping.pm
@@ -410,7 +410,11 @@ sub ping_external {
       $timeout            # Seconds after which ping times out
      ) = @_;
 
-  eval { require Net::Ping::External; }
+  eval {
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
+    require Net::Ping::External;
+  }
     or croak('Protocol "external" not supported on your system: Net::Ping::External not found');
   return Net::Ping::External::ping(ip => $ip, timeout => $timeout);
 }
diff --git dist/PathTools/Cwd.pm b/dist/PathTools/Cwd.pm
index b4e80c6..1a58a46 100644
--- dist/PathTools/Cwd.pm
+++ dist/PathTools/Cwd.pm
@@ -40,7 +40,10 @@ if ($^O eq 'os2') {
 my $use_vms_feature;
 BEGIN {
     if ($^O eq 'VMS') {
-        if (eval { local $SIG{__DIE__}; require VMS::Feature; }) {
+        if (eval { local $SIG{__DIE__};
+                   local @INC = @INC;
+                   pop @INC if $INC[-1] eq '.';
+                   require VMS::Feature; }) {
             $use_vms_feature = 1;
         }
     }
diff --git dist/PathTools/lib/File/Spec/Cygwin.pm b/dist/PathTools/lib/File/Spec/Cygwin.pm
index e4d55e1..3ae0e99 100644
--- dist/PathTools/lib/File/Spec/Cygwin.pm
+++ dist/PathTools/lib/File/Spec/Cygwin.pm
@@ -137,7 +137,11 @@ sub case_tolerant {
   if ($mntopts and ($mntopts =~ /,managed/)) {
     return 0;
   }
-  eval { require Win32API::File; } or return 1;
+  eval {
+      local @INC = @INC;
+      pop @INC if $INC[-1] eq '.';
+      require Win32API::File;
+  } or return 1;
   my $osFsType = "\0"x256;
   my $osVolName = "\0"x256;
   my $ouFsFlags = 0;
diff --git dist/PathTools/lib/File/Spec/VMS.pm b/dist/PathTools/lib/File/Spec/VMS.pm
index 964b26c..0b2ba1f 100644
--- dist/PathTools/lib/File/Spec/VMS.pm
+++ dist/PathTools/lib/File/Spec/VMS.pm
@@ -39,7 +39,10 @@ via the C<DECC$FILENAME_UNIX_REPORT> CRTL feature.
 
 my $use_feature;
 BEGIN {
-    if (eval { local $SIG{__DIE__}; require VMS::Feature; }) {
+    if (eval { local $SIG{__DIE__};
+               local @INC = @INC;
+               pop @INC if $INC[-1] eq '.';
+               require VMS::Feature; }) {
         $use_feature = 1;
     }
 }
diff --git dist/PathTools/lib/File/Spec/Win32.pm b/dist/PathTools/lib/File/Spec/Win32.pm
index 9a36847..5435138 100644
--- dist/PathTools/lib/File/Spec/Win32.pm
+++ dist/PathTools/lib/File/Spec/Win32.pm
@@ -90,7 +90,11 @@ Default: 1
 =cut
 
 sub case_tolerant {
-  eval { require Win32API::File; } or return 1;
+  eval {
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
+    require Win32API::File;
+  } or return 1;
   my $drive = shift || "C:";
   my $osFsType = "\0"x256;
   my $osVolName = "\0"x256;
diff --git dist/Storable/Storable.pm b/dist/Storable/Storable.pm
index bd0632f..7b6e1a0 100644
--- dist/Storable/Storable.pm
+++ dist/Storable/Storable.pm
@@ -25,7 +25,13 @@ use vars qw($canonical $forgive_me $VERSION);
 $VERSION = '2.53_01';
 
 BEGIN {
-    if (eval { local $SIG{__DIE__}; require Log::Agent; 1 }) {
+    if (eval {
+        local $SIG{__DIE__};
+        local @INC = @INC;
+        pop @INC if $INC[-1] eq '.';
+        require Log::Agent;
+        1;
+    }) {
         Log::Agent->import;
     }
     #
diff --git dist/base/lib/base.pm b/dist/base/lib/base.pm
index 5d13787..2b15096 100644
--- dist/base/lib/base.pm
+++ dist/base/lib/base.pm
@@ -96,7 +96,11 @@ sub import {
             {
                 local $SIG{__DIE__};
                 my $fn = _module_to_filename($base);
-                eval { require $fn };
+                eval {
+                    local @INC = @INC;
+                    pop @INC if $INC[-1] eq '.';
+                    require $fn
+                };
                 # Only ignore "Can't locate" errors from our eval require.
                 # Other fatal errors (syntax etc) must be reported.
                 #
-- 
2.1.4


From 71eb9b1a658a5fac67d434832e8133dc54961c34 Mon Sep 17 00:00:00 2001
From: Tony Cook <tony@develop-help.com>
Date: Mon, 27 Jun 2016 16:21:21 +1000
Subject: [PATCH 7/9] cpan/: remove . from @INC when loading optional modules

This was originally against maint-5.24 where bignum is in cpan/, but
in maint-5.22 it was in dist/
---
 cpan/CPAN/lib/App/Cpan.pm                           | 21 ++++++++++++++++-----
 cpan/CPAN/lib/CPAN.pm                               |  4 ++++
 cpan/Digest/Digest.pm                               |  6 +++++-
 cpan/Encode/Encode.pm                               |  2 ++
 dist/ExtUtils-Command/lib/ExtUtils/Command.pm       |  5 ++++-
 cpan/File-Fetch/lib/File/Fetch.pm                   | 10 ++++++++++
 cpan/HTTP-Tiny/lib/HTTP/Tiny.pm                     |  2 ++
 cpan/IO-Compress/lib/IO/Uncompress/AnyUncompress.pm |  2 ++
 cpan/IPC-Cmd/lib/IPC/Cmd.pm                         |  4 ++++
 .../lib/Locale/Maketext/Simple.pm                   |  7 ++++++-
 cpan/Memoize/Memoize.pm                             |  6 +++++-
 cpan/Pod-Perldoc/lib/Pod/Perldoc.pm                 |  5 +++++
 cpan/Sys-Syslog/Syslog.pm                           |  2 ++
 cpan/libnet/Net/Config.pm                       |  7 ++++++-
 dist/bignum/lib/bigint.pm                           |  2 ++
 dist/bignum/lib/bignum.pm                           |  2 ++
 dist/bignum/lib/bigrat.pm                           |  2 ++
 17 files changed, 79 insertions(+), 10 deletions(-)

diff --git cpan/CPAN/lib/App/Cpan.pm b/cpan/CPAN/lib/App/Cpan.pm
index e8c9bb7..3fac04d 100644
--- cpan/CPAN/lib/App/Cpan.pm
+++ cpan/CPAN/lib/App/Cpan.pm
@@ -530,9 +530,20 @@ sub AUTOLOAD { 1 }
 sub DESTROY { 1 }
 }
 
+# load a module without searching the default entry for the current
+# directory
+sub _safe_load_module {
+  my $name = shift;
+
+  local @INC = @INC;
+  pop @INC if $INC[-1] eq '.';
+
+  eval "require $name; 1";
+}
+
 sub _init_logger
 	{
-	my $log4perl_loaded = eval "require Log::Log4perl; 1";
+	my $log4perl_loaded = _safe_load_module("Log::Log4perl");
 
     unless( $log4perl_loaded )
         {
@@ -993,7 +1004,7 @@ sub _load_local_lib # -I
 	{
 	$logger->debug( "Loading local::lib" );
 
-	my $rc = eval { require local::lib; 1; };
+	my $rc = _safe_load_module("local::lib");
 	unless( $rc ) {
 		$logger->die( "Could not load local::lib" );
 		}
@@ -1121,7 +1132,7 @@ sub _get_file
 	{
 	my $path = shift;
 
-	my $loaded = eval "require LWP::Simple; 1;";
+	my $loaded = _safe_load_module("LWP::Simple");
 	croak "You need LWP::Simple to use features that fetch files from CPAN\n"
 		unless $loaded;
 
@@ -1143,7 +1154,7 @@ sub _gitify
 	{
 	my $args = shift;
 
-	my $loaded = eval "require Archive::Extract; 1;";
+	my $loaded = _safe_load_module("Archive::Extract");
 	croak "You need Archive::Extract to use features that gitify distributions\n"
 		unless $loaded;
 
@@ -1207,7 +1218,7 @@ sub _show_Changes
 sub _get_changes_file
 	{
 	croak "Reading Changes files requires LWP::Simple and URI\n"
-		unless eval "require LWP::Simple; require URI; 1";
+		unless _safe_load_module("LWP::Simple") && _safe_load_module("URI");
 
     my $url = shift;
 
diff --git cpan/CPAN/lib/CPAN.pm b/cpan/CPAN/lib/CPAN.pm
index f4544f0..25bf349 100644
--- cpan/CPAN/lib/CPAN.pm
+++ cpan/CPAN/lib/CPAN.pm
@@ -1104,6 +1104,8 @@ sub has_usable {
                                ]
               };
     if ($usable->{$mod}) {
+        local @INC = @INC;
+        pop @INC if $INC[-1] eq '.';
         for my $c (0..$#{$usable->{$mod}}) {
             my $code = $usable->{$mod}[$c];
             my $ret = eval { &$code() };
@@ -1146,6 +1148,8 @@ sub has_inst {
       $CPAN::META->{dontload_hash}{$mod}||=1; # unsafe meta access, ok
       return 0;
     }
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     my $file = $mod;
     my $obj;
     $file =~ s|::|/|g;
diff --git cpan/Digest/Digest.pm b/cpan/Digest/Digest.pm
index c3355a8..299e25e 100644
--- cpan/Digest/Digest.pm
+++ cpan/Digest/Digest.pm
@@ -38,7 +38,11 @@ sub new
         unless (exists ${"$class\::"}{"VERSION"}) {
             my $pm_file = $class . ".pm";
             $pm_file =~ s{::}{/}g;
-            eval { require $pm_file };
+            eval {
+                local @INC = @INC;
+                pop @INC if $INC[-1] eq '.';
+                require $pm_file
+	    };
             if ($@) {
                 $err ||= $@;
                 next;
diff --git cpan/Encode/Encode.pm b/cpan/Encode/Encode.pm
index 7937dde..874cbc6 100644
--- cpan/Encode/Encode.pm
+++ cpan/Encode/Encode.pm
@@ -56,6 +56,8 @@ require Encode::Config;
 eval {
     local $SIG{__DIE__};
     local $SIG{__WARN__};
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     require Encode::ConfigLocal;
 };
 
diff --git dist/ExtUtils-Command/lib/ExtUtils/Command.pm b/dist/ExtUtils-Command/lib/ExtUtils/Command.pm
index 7f3161a..421cf08 100644
--- dist/ExtUtils-Command/lib/ExtUtils/Command.pm
+++ dist/ExtUtils-Command/lib/ExtUtils/Command.pm
@@ -19,7 +19,10 @@ if( $Is_VMS ) {
     my $vms_efs;
     my $vms_case;
 
-    if (eval { local $SIG{__DIE__}; require VMS::Feature; }) {
+    if (eval { local $SIG{__DIE__};
+               local @INC = @INC;
+               pop @INC if $INC[-1] eq '.';
+               require VMS::Feature; }) {
         $vms_unix_rpt = VMS::Feature::current("filename_unix_report");
         $vms_efs = VMS::Feature::current("efs_charset");
         $vms_case = VMS::Feature::current("efs_case_preserve");
diff --git cpan/File-Fetch/lib/File/Fetch.pm b/cpan/File-Fetch/lib/File/Fetch.pm
index 7d6a263..5a8799b 100644
--- cpan/File-Fetch/lib/File/Fetch.pm
+++ cpan/File-Fetch/lib/File/Fetch.pm
@@ -567,6 +567,8 @@ sub _lwp_fetch {
 
     };
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     unless( can_load( modules => $use_list ) ) {
         $METHOD_FAIL->{'lwp'} = 1;
         return;
@@ -619,6 +621,8 @@ sub _httptiny_fetch {
 
     };
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     unless( can_load(modules => $use_list) ) {
         $METHOD_FAIL->{'httptiny'} = 1;
         return;
@@ -658,6 +662,8 @@ sub _httplite_fetch {
 
     };
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     unless( can_load(modules => $use_list) ) {
         $METHOD_FAIL->{'httplite'} = 1;
         return;
@@ -733,6 +739,8 @@ sub _iosock_fetch {
         'IO::Select'       => '0.0',
     };
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     unless( can_load(modules => $use_list) ) {
         $METHOD_FAIL->{'iosock'} = 1;
         return;
@@ -814,6 +822,8 @@ sub _netftp_fetch {
     check( $tmpl, \%hash ) or return;
 
     ### required modules ###
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     my $use_list = { 'Net::FTP' => 0 };
 
     unless( can_load( modules => $use_list ) ) {
diff --git cpan/HTTP-Tiny/lib/HTTP/Tiny.pm b/cpan/HTTP-Tiny/lib/HTTP/Tiny.pm
index 878cce8..40d948f 100644
--- cpan/HTTP-Tiny/lib/HTTP/Tiny.pm
+++ cpan/HTTP-Tiny/lib/HTTP/Tiny.pm
@@ -1392,6 +1392,8 @@ sub _find_CA_file {
     return $self->{SSL_options}->{SSL_ca_file}
         if $self->{SSL_options}->{SSL_ca_file} and -e $self->{SSL_options}->{SSL_ca_file};
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     return Mozilla::CA::SSL_ca_file()
         if eval { require Mozilla::CA };
 
diff --git cpan/IO-Compress/lib/IO/Uncompress/AnyUncompress.pm b/cpan/IO-Compress/lib/IO/Uncompress/AnyUncompress.pm
index 602178c..cec47cb 100644
--- cpan/IO-Compress/lib/IO/Uncompress/AnyUncompress.pm
+++ cpan/IO-Compress/lib/IO/Uncompress/AnyUncompress.pm
@@ -27,6 +27,8 @@ Exporter::export_ok_tags('all');
 
 BEGIN
 {
+   local @INC = @INC;
+   pop @INC if $INC[-1] eq '.';
    eval ' use IO::Uncompress::Adapter::Inflate 2.064 ;';
    eval ' use IO::Uncompress::Adapter::Bunzip2 2.064 ;';
    eval ' use IO::Uncompress::Adapter::LZO 2.064 ;';
diff --git cpan/IPC-Cmd/lib/IPC/Cmd.pm b/cpan/IPC-Cmd/lib/IPC/Cmd.pm
index 6a82bdf..84ad0a0 100644
--- cpan/IPC-Cmd/lib/IPC/Cmd.pm
+++ cpan/IPC-Cmd/lib/IPC/Cmd.pm
@@ -142,6 +142,8 @@ sub can_use_ipc_run     {
     return if IS_WIN98;
 
     ### if we don't have ipc::run, we obviously can't use it.
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     return unless can_load(
                         modules => { 'IPC::Run' => '0.55' },
                         verbose => ($WARN && $verbose),
@@ -169,6 +171,8 @@ sub can_use_ipc_open3   {
 
     ### IPC::Open3 works on every non-VMS platform, but it can't
     ### capture buffers on win32 :(
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     return unless can_load(
         modules => { map {$_ => '0.0'} qw|IPC::Open3 IO::Select Symbol| },
         verbose => ($WARN && $verbose),
diff --git cpan/Locale-Maketext-Simple/lib/Locale/Maketext/Simple.pm b/cpan/Locale-Maketext-Simple/lib/Locale/Maketext/Simple.pm
index 30760f3..9465c52 100644
--- cpan/Locale-Maketext-Simple/lib/Locale/Maketext/Simple.pm
+++ cpan/Locale-Maketext-Simple/lib/Locale/Maketext/Simple.pm
@@ -134,7 +134,12 @@ sub load_loc {
     my $pkg = join('::', grep { defined and length } $args{Class}, $args{Subclass});
     return $Loc{$pkg} if exists $Loc{$pkg};
 
-    eval { require Locale::Maketext::Lexicon; 1 }   or return;
+    eval {
+        local @INC = @INC;
+        pop @INC if $INC[-1] eq '.';
+        require Locale::Maketext::Lexicon;
+        1
+    } or return;
     $Locale::Maketext::Lexicon::VERSION > 0.20	    or return;
     eval { require File::Spec; 1 }		    or return;
 
diff --git cpan/Memoize/Memoize.pm b/cpan/Memoize/Memoize.pm
index 9a58c4a..b566f21 100644
--- cpan/Memoize/Memoize.pm
+++ cpan/Memoize/Memoize.pm
@@ -184,7 +184,11 @@ sub _my_tie {
   }
   my $modulefile = $module . '.pm';
   $modulefile =~ s{::}{/}g;
-  eval { require $modulefile };
+  eval {
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
+    require $modulefile
+  };
   if ($@) {
     croak "Memoize: Couldn't load hash tie module `$module': $@; aborting";
   }
diff --git cpan/Pod-Perldoc/lib/Pod/Perldoc.pm b/cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
index 969019d..f7d10d6 100644
--- cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
+++ cpan/Pod-Perldoc/lib/Pod/Perldoc.pm
@@ -573,6 +573,9 @@ sub find_good_formatter_class {
   my @class_list = @{ $self->{'formatter_classes'} || [] };
   $self->die( "WHAT?  Nothing in the formatter class list!?" ) unless @class_list;
 
+  local @INC = @INC;
+  pop @INC if $INC[-1] eq '.';
+
   my $good_class_found;
   foreach my $c (@class_list) {
     DEBUG > 4 and print "Trying to load $c...\n";
@@ -1004,6 +1007,8 @@ sub new_translator { # $tr = $self->new_translator($lang);
     my $self = shift;
     my $lang = shift;
 
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     my $pack = 'POD2::' . uc($lang);
     eval "require $pack";
     if ( !$@ && $pack->can('new') ) {
diff --git cpan/Sys-Syslog/Syslog.pm b/cpan/Sys-Syslog/Syslog.pm
index 25164af..eed224a 100644
--- cpan/Sys-Syslog/Syslog.pm
+++ cpan/Sys-Syslog/Syslog.pm
@@ -888,6 +888,8 @@ sub silent_eval (&) {
 sub can_load {
     my ($module, $verbose) = @_;
     local($SIG{__DIE__}, $SIG{__WARN__}, $@);
+    local @INC = @INC;
+    pop @INC if $INC[-1] eq '.';
     my $loaded = eval "use $module; 1";
     warn $@ if not $loaded and $verbose;
     return $loaded
diff --git cpan/libnet/Net/Config.pm b/cpan/libnet/Net/Config.pm
index 953a826..5c97504 100644
--- cpan/libnet/Net/Config.pm
+++ cpan/libnet/Net/Config.pm
@@ -23,7 +23,12 @@ our $VERSION = "3.05";
 
 our($CONFIGURE, $LIBNET_CFG);
 
-eval { local $SIG{__DIE__}; require Net::LocalCfg };
+eval {
+  local @INC = @INC;
+  pop @INC if $INC[-1] eq '.';
+  local $SIG{__DIE__};
+  require Net::LocalCfg;
+};
 
 our %NetConfig = (
   nntp_hosts      => [],
--- dist/bignum/lib/bigint.pm.orig	Sat Dec 27 03:49:23 2014
+++ dist/bignum/lib/bigint.pm	Sat Jul 23 21:29:44 2016
@@ -248,6 +248,8 @@ sub import 
     # see if we can find Math::BigInt::Lite
     if (!defined $a && !defined $p)		# rounding won't work to well
       {
+      local @INC = @INC;
+      pop @INC if $INC[-1] eq '.';
       eval 'require Math::BigInt::Lite;';
       if ($@ eq '')
         {
--- dist/bignum/lib/bignum.pm.orig	Sat Dec 27 03:49:23 2014
+++ dist/bignum/lib/bignum.pm	Sat Jul 23 21:29:52 2016
@@ -155,6 +155,8 @@ sub import 
     # see if we can find Math::BigInt::Lite
     if (!defined $a && !defined $p)		# rounding won't work to well
       {
+      local @INC = @INC;
+      pop @INC if $INC[-1] eq '.';
       eval 'require Math::BigInt::Lite;';
       if ($@ eq '')
         {
--- dist/bignum/lib/bigrat.pm.orig	Sat Dec 27 03:49:23 2014
+++ dist/bignum/lib/bigrat.pm	Sat Jul 23 21:29:59 2016
@@ -148,6 +148,8 @@ sub import 
     # see if we can find Math::BigInt::Lite
     if (!defined $a && !defined $p)             # rounding won't work to well
       {
+      local @INC = @INC;
+      pop @INC if $INC[-1] eq '.';
       eval 'require Math::BigInt::Lite;';
       if ($@ eq '')
         {
-- 
2.1.4
