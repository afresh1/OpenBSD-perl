#!/bin/sh
# Some of this was based on portimport

set -e

BINDIR=$( readlink -f $(dirname $0) )
. $BINDIR/utils.sub

# Keeps me from accidentially committing someplace I shouldn't
CVSROOT=

setup_cvsroot

PERLCVS=src/gnu/usr.bin/perl

# Now we need a clean version of perl, fresh from the vendor
do_extract_perl

# Copy the clean version to use for the import
rm -rf ${PERL_BASE}.dist
cp -r $PERL_BASE ${PERL_BASE}.dist

# Put unicore off until later
UNICORE_PATCH=$SRCDIR/patches/GOOD/pre_built_unicore.patch
mv $UNICORE_PATCH $UNICORE_PATCH.tmp || exit
trap "mv $UNICORE_PATCH.tmp $UNICORE_PATCH" 0 1 2 15

# Apply local patches, except unicore
cd $PERL_BASE
do_patch_perl
cd $OLDPWD

# remove any patch cruft
find $PERL_BASE \( -name '*.orig' \) -exec rm -f {} \+

# now copy that to a holding place, for when we commit without the unicore updates
rm -rf ${PERL_BASE}.no_unicore
cp -r $PERL_BASE ${PERL_BASE}.no_unicore

# Now apply unicore patches
patch -fEp0 -d $PERL_BASE -i $UNICORE_PATCH.tmp

# remove any patch cruft
find $PERL_BASE \( -name '*.orig' \) -exec rm -f {} \+

### END PREPARE # BEGIN IMPORT ###

# We skip deleting all files are going to add and all unicore files
export SKIP_LIST="$( cd $PERL_BASE && find . -type f \
    ! -exec test -e ../${PERL_BASE}.dist/{} \; -print
)"

# Import vendor version perl
TAG=`echo $PERL_BASE | tr 'a-z.-' 'A-Z_'`
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Import $PERL_BASE"
    [ -e $SRCDIR/commit_message.import ] && msg=-F$SRCDIR/commit_message.import
    cd ${PERL_BASE}.dist
    cvs import -ko $msg $PERLCVS PERL $TAG || true
    cd $OLDPWD
else
    echo "Ready to import, use this command, then fg to continue:"
    echo cd ${PERL_BASE}.dist
    echo "cvs -d $CVSROOT import -ko -m\"Import $PERL_BASE\" $PERLCVS PERL $TAG"
    echo cd \$OLDPWD
    kill -STOP $$
fi

# Checkout the tree to fix the merge errors
cvs checkout -jPERL:yesterday -jPERL $PERLCVS

# Get us even with vendor perl
cvs_rm_add ${PERL_BASE}.dist $PERLCVS

if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Fix merge issues, remove excess files - match $PERL_BASE dist"
    [ -e $SRCDIR/commit_message.dist ] && msg=-F$SRCDIR/commit_message.dist
    cvs commit $msg $PERLCVS
else
    echo "Verify we match upstream, commit, and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

# Fix some files that didn't get added properly with -ko
( cd $PERLCVS && cvs admin -ko $( find cpan/Term-ReadKey -type f ! -path '*/CVS/*' ) )
cvs up -P $PERLCVS/cpan/Term-ReadKey

# Now we only want to skip the unicore files
export SKIP_LIST="$( cd $PERL_BASE && find . -type f \
    ! -exec test -e ../${PERL_BASE}.no_unicore/{} \; -print
)"

# Add patches and remove anything we removed
cvs_rm_add ${PERL_BASE}.no_unicore $PERLCVS

# Verify it looks good, then cvs commit
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Apply local patches, remove excess files - $PERL_BASE"
    [ -e $SRCDIR/commit_message.patched ] && msg=-F$SRCDIR/commit_message.patched
    cvs commit $msg $PERLCVS
else
    echo "Verify local patches look good, then commit and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

for f in $( cd $SRCDIR/files && find . -type f ); do
    cp $PERLCVS/$f $PERL_BASE/$f
    #cp $PERLCVS/$f $SRCDIR/files/$f
done

# Now we don't skip anything
SKIP_LIST=""

# Add unicore patches and remove anything we removed
cvs_rm_add $PERL_BASE $PERLCVS

# Verify it looks good, then cvs commit
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Apply pre-built unicore patch, remove excess files - $PERL_BASE"
    [ -e $SRCDIR/commit_message.unicore ] && msg=-F$SRCDIR/commit_message.unicore
    cvs commit $msg $PERLCVS
else
    echo "Verify unicore look good, then commit and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

cvs up -PAd $PERLCVS

mv ${PERLCVS%%/*} ${PERLCVS%%/*}.imported
cvs checkout -P $PERLCVS

set -x
diff -x CVS -Nru $PERL_BASE $PERLCVS
