#!/bin/sh
# Some of this was based on portimport

set -e

if [ -e ./bin/utils.sub ]; then
    BINDIR=./bin
else
    BINDIR=$( readlink -f $(dirname $0) )
fi
. $BINDIR/utils.sub

export CVSROOT=${PWD}/cvs
PERLCVS=src/gnu/usr.bin/perl

for d in $CVSROOT $PERL_BASE{.dist,.no_unicore,}; do
    [ -d $d ] || ( print "Missing $d!" >&2 ; exit 1 )
done

# We skip deleting all files are going to add and all unicore files
export SKIP_LIST="$( cd $PERL_BASE && find . -type f \
    ! -exec test -e ../${PERL_BASE}.dist/{} \; -print
)"

# Import vendor version perl
TAG=`echo $PERL_BASE | tr 'a-z.-' 'A-Z_'`
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Import $PERL_BASE"
    # Apparently "import" doesn't support -F :-(
    #[ -e $SRCDIR/commit_message.import ] && msg=-F$SRCDIR/commit_message.import
    cd ${PERL_BASE}.dist
    import_log=$( mktemp import_log-XXXXXXXXX )
    trap "rm -f $import_log" 0 1 2 15
    cvs import -ko "$msg" $PERLCVS PERL $TAG | tee $import_log
    tail -2 $import_log | head -1 | grep 'cvs checkout'
    rm -f $import_log
    cd $OLDPWD
else
    echo "Ready to import, use this command, then fg to continue:"
    echo cd ${PERL_BASE}.dist
    echo "cvs -d $CVSROOT import -ko -m\"Import $PERL_BASE\" $PERLCVS PERL $TAG"
    echo cd \$OLDPWD
    kill -STOP $$
fi

# Checkout the tree to fix the merge errors
cvs checkout -jPERL:yesterday -jPERL $PERLCVS

# Get us even with vendor perl
cvs_rm_add ${PERL_BASE}.dist $PERLCVS

if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Fix merge issues, remove excess files - match $PERL_BASE dist"
    [ -e $SRCDIR/commit_message.dist ] && msg=-F$SRCDIR/commit_message.dist
    cvs commit "$msg" $PERLCVS
else
    echo "Verify we match upstream, commit, and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

# Fix some files that didn't get added properly with -ko
( cd $PERLCVS && cvs admin -ko $( find cpan/Term-ReadKey -type f ! -path '*/CVS/*' ) )
cvs up -P $PERLCVS/cpan/Term-ReadKey

# Now we only want to skip the unicore files
export SKIP_LIST="$( cd $PERL_BASE && find . -type f \
    ! -exec test -e ../${PERL_BASE}.no_unicore/{} \; -print
)"

# Add patches and remove anything we removed
cvs_rm_add ${PERL_BASE}.no_unicore $PERLCVS

# Verify it looks good, then cvs commit
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Apply local patches, remove excess files - $PERL_BASE"
    [ -e $SRCDIR/commit_message.patched ] && msg=-F$SRCDIR/commit_message.patched
    cvs commit "$msg" $PERLCVS
else
    echo "Verify local patches look good, then commit and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

# Copy anything we've just added from the no_unicore directory
# to the final directory, so we get the updated RCS Ids.
for f in $( cd $PERL_BASE.no_unicore && find . -type f \
    ! -exec test -e ../${PERL_BASE}.dist/{} \; -print
); do
    cp $PERLCVS/$f $PERL_BASE/$f
    #cp $PERLCVS/$f $SRCDIR/files/$f
done

# Now we don't skip anything
SKIP_LIST=""

# Add unicore patches and remove anything we removed
cvs_rm_add $PERL_BASE $PERLCVS

# Verify it looks good, then cvs commit
if [ -n "$AUTOCOMMIT" ]; then
    msg=-m"Apply pre-built unicore patch, remove excess files - $PERL_BASE"
    [ -e $SRCDIR/commit_message.unicore ] && msg=-F$SRCDIR/commit_message.unicore
    cvs commit "$msg" $PERLCVS
else
    echo "Verify unicore look good, then commit and fg to continue"
    echo "cvs -d $CVSROOT commit $PERLCVS"
    kill -STOP $$
fi

cvs up -PAd $PERLCVS

mv ${PERLCVS%%/*} ${PERLCVS%%/*}.imported
cvs checkout -P $PERLCVS

set -x
diff -x CVS -Nru $PERL_BASE $PERLCVS
